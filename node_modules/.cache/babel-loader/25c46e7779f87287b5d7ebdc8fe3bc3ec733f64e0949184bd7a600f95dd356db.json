{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ManuJohn\\\\Downloads\\\\React\\\\Starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseFilter.js\";\nimport React from 'react';\nimport './ExpenseFilter.css';\n\n/*\r\n1. Listen to changes(select element)\r\n2. On that element trigger a function +\r\n3. Pass pointer to that function to the element\r\n4. Retrieve value from \"event\" -> event.target.value\r\n5. Go to file where you want to get this data -> Expenses.js\r\n6. Wrap return if needed to make as single element return here using div\r\n7. Forward picked value to expenses.js-> in Expenses.js it is managed with State\r\n8. Pass a function down to a component and that component calls that function when something happens\r\n9. Pass a function down to ExpensesFilter, so that whenever new value is chosen it gets triggered?\r\n10. Define function which you want to pass down-> Handler\r\n11. Handler function can handle the date that is being passed from the other file\r\n12. Pass a name(prop) to the other file in the reference element pointing to handler function\r\n13. Back to sending file-> recieve props\r\n14. set whatever data to  props.<name which points handler>(<data>)+\r\n15. function which is recieved through that prop with the name accepts value which is being send\r\n16. Now data is forwarded\r\n17. Save data in state-> in Expenses.js -- import useState\r\n18. initialise state with any chosen value\r\n19. pass recieved data to set function --- setFilteredYEar(<data>) inside handler\r\n20. Send a prop to child to set the initial year set in state as default value to appear\r\n21. send a name pointing to the first/default value in state \r\n\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesFilter = props => {\n  const dropdownChangeHandler = event => {\n    props.onChangeFilter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses-filter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expenses-filter__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: dropdownChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesFilter;\nexport default ExpensesFilter;\nvar _c;\n$RefreshReg$(_c, \"ExpensesFilter\");","map":{"version":3,"names":["React","ExpensesFilter","props","dropdownChangeHandler","event","onChangeFilter","target","value"],"sources":["C:/Users/ManuJohn/Downloads/React/Starting-setup/src/components/Expenses/ExpenseFilter.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\n/*\r\n1. Listen to changes(select element)\r\n2. On that element trigger a function +\r\n3. Pass pointer to that function to the element\r\n4. Retrieve value from \"event\" -> event.target.value\r\n5. Go to file where you want to get this data -> Expenses.js\r\n6. Wrap return if needed to make as single element return here using div\r\n7. Forward picked value to expenses.js-> in Expenses.js it is managed with State\r\n8. Pass a function down to a component and that component calls that function when something happens\r\n9. Pass a function down to ExpensesFilter, so that whenever new value is chosen it gets triggered?\r\n10. Define function which you want to pass down-> Handler\r\n11. Handler function can handle the date that is being passed from the other file\r\n12. Pass a name(prop) to the other file in the reference element pointing to handler function\r\n13. Back to sending file-> recieve props\r\n14. set whatever data to  props.<name which points handler>(<data>)+\r\n15. function which is recieved through that prop with the name accepts value which is being send\r\n16. Now data is forwarded\r\n17. Save data in state-> in Expenses.js -- import useState\r\n18. initialise state with any chosen value\r\n19. pass recieved data to set function --- setFilteredYEar(<data>) inside handler\r\n20. Send a prop to child to set the initial year set in state as default value to appear\r\n21. send a name pointing to the first/default value in state \r\n\r\n*/\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\n  const dropdownChangeHandler=(event)=>{\r\n  props.onChangeFilter(event.target.value)\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,qBAAqB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAEhC,MAAMC,qBAAqB,GAAEC,KAAK,IAAG;IACrCF,KAAK,CAACG,cAAc,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,uBAC9B;MAAK,SAAS,EAAC,0BAA0B;MAAA,wBACvC;QAAA,UAAO;MAAc;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7B;QAAQ,QAAQ,EAAEJ,qBAAsB;QAAA,wBACtC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAClC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAClC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAClC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAlBIF,cAAc;AAoBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}